"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const auth_1 = require("../../auth");
const executeAccess_1 = __importDefault(require("../../auth/executeAccess"));
const sanitizeInternalFields_1 = __importDefault(require("../../utilities/sanitizeInternalFields"));
const replaceWithDraftIfAvailable_1 = __importDefault(require("../../versions/drafts/replaceWithDraftIfAvailable"));
async function findOne(args) {
    var _a;
    const { globals: { Model } } = this;
    const { globalConfig, locale, req, slug, depth, showHiddenFields, draft: draftEnabled = false, overrideAccess = false, } = args;
    // /////////////////////////////////////
    // Retrieve and execute access
    // /////////////////////////////////////
    const queryToBuild = {
        where: {
            and: [
                {
                    globalType: {
                        equals: slug,
                    },
                },
            ],
        },
    };
    let accessResult;
    if (!overrideAccess) {
        accessResult = await (0, executeAccess_1.default)({ req }, globalConfig.access.read);
        if ((0, auth_1.hasWhereAccessResult)(accessResult)) {
            queryToBuild.where.and.push(accessResult);
        }
    }
    const query = await Model.buildQuery(queryToBuild, locale);
    // /////////////////////////////////////
    // Perform database operation
    // /////////////////////////////////////
    let doc = await Model.findOne(query).lean();
    if (!doc) {
        doc = {};
    }
    else if (doc._id) {
        doc.id = doc._id;
        delete doc._id;
    }
    doc = JSON.stringify(doc);
    doc = JSON.parse(doc);
    doc = (0, sanitizeInternalFields_1.default)(doc);
    // /////////////////////////////////////
    // Replace document with draft if available
    // /////////////////////////////////////
    if (((_a = globalConfig.versions) === null || _a === void 0 ? void 0 : _a.drafts) && draftEnabled) {
        doc = await (0, replaceWithDraftIfAvailable_1.default)({
            payload: this,
            entity: globalConfig,
            doc,
            locale,
            accessResult,
        });
    }
    // /////////////////////////////////////
    // 3. Execute before collection hook
    // /////////////////////////////////////
    await globalConfig.hooks.beforeRead.reduce(async (priorHook, hook) => {
        await priorHook;
        doc = await hook({
            req,
            doc,
        }) || doc;
    }, Promise.resolve());
    // /////////////////////////////////////
    // 4. Execute field-level hooks and access
    // /////////////////////////////////////
    doc = await this.performFieldOperations(globalConfig, {
        data: doc,
        hook: 'afterRead',
        operation: 'read',
        req,
        depth,
        flattenLocales: true,
        showHiddenFields,
    });
    // /////////////////////////////////////
    // 5. Execute after collection hook
    // /////////////////////////////////////
    await globalConfig.hooks.afterRead.reduce(async (priorHook, hook) => {
        await priorHook;
        doc = await hook({
            req,
            doc,
        }) || doc;
    }, Promise.resolve());
    // /////////////////////////////////////
    // 6. Return results
    // /////////////////////////////////////
    return doc;
}
exports.default = findOne;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmluZE9uZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9nbG9iYWxzL29wZXJhdGlvbnMvZmluZE9uZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHFDQUFrRDtBQUNsRCw2RUFBcUQ7QUFHckQsb0dBQTRFO0FBQzVFLG9IQUE0RjtBQUU1RixLQUFLLFVBQVUsT0FBTyxDQUFDLElBQUk7O0lBQ3pCLE1BQU0sRUFBRSxPQUFPLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQztJQUVwQyxNQUFNLEVBQ0osWUFBWSxFQUNaLE1BQU0sRUFDTixHQUFHLEVBQ0gsSUFBSSxFQUNKLEtBQUssRUFDTCxnQkFBZ0IsRUFDaEIsS0FBSyxFQUFFLFlBQVksR0FBRyxLQUFLLEVBQzNCLGNBQWMsR0FBRyxLQUFLLEdBQ3ZCLEdBQUcsSUFBSSxDQUFDO0lBRVQsd0NBQXdDO0lBQ3hDLDhCQUE4QjtJQUM5Qix3Q0FBd0M7SUFFeEMsTUFBTSxZQUFZLEdBQXFCO1FBQ3JDLEtBQUssRUFBRTtZQUNMLEdBQUcsRUFBRTtnQkFDSDtvQkFDRSxVQUFVLEVBQUU7d0JBQ1YsTUFBTSxFQUFFLElBQUk7cUJBQ2I7aUJBQ0Y7YUFDRjtTQUNGO0tBQ0YsQ0FBQztJQUVGLElBQUksWUFBMEIsQ0FBQztJQUUvQixJQUFJLENBQUMsY0FBYyxFQUFFO1FBQ25CLFlBQVksR0FBRyxNQUFNLElBQUEsdUJBQWEsRUFBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFdEUsSUFBSSxJQUFBLDJCQUFvQixFQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3RDLFlBQVksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUMzQztLQUNGO0lBRUQsTUFBTSxLQUFLLEdBQUcsTUFBTSxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQVksRUFBRSxN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