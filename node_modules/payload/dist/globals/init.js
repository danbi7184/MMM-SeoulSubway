"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const mongoose_1 = __importDefault(require("mongoose"));
const mongoose_paginate_v2_1 = __importDefault(require("mongoose-paginate-v2"));
const buildQuery_1 = __importDefault(require("../mongoose/buildQuery"));
const buildModel_1 = __importDefault(require("./buildModel"));
const getVersionsModelName_1 = require("../versions/getVersionsModelName");
const buildGlobalFields_1 = require("../versions/buildGlobalFields");
const buildSchema_1 = __importDefault(require("../mongoose/buildSchema"));
function initGlobals(ctx) {
    if (ctx.config.globals) {
        ctx.globals = {
            Model: (0, buildModel_1.default)(ctx.config),
            config: ctx.config.globals,
        };
        ctx.config.globals.forEach((global) => {
            if (global.versions) {
                const versionModelName = (0, getVersionsModelName_1.getVersionsModelName)(global);
                const versionSchema = (0, buildSchema_1.default)(ctx.config, (0, buildGlobalFields_1.buildVersionGlobalFields)(global), {
                    disableUnique: true,
                    options: {
                        timestamps: true,
                    },
                });
                versionSchema.plugin(mongoose_paginate_v2_1.default, { useEstimatedCount: true })
                    .plugin(buildQuery_1.default);
                ctx.versions[global.slug] = mongoose_1.default.model(versionModelName, versionSchema);
            }
        });
        // If not local, open routes
        if (!ctx.local) {
            const router = express_1.default.Router();
            ctx.config.globals.forEach((global) => {
                router
                    .route(`/globals/${global.slug}`)
                    .get(ctx.requestHandlers.globals.findOne(global))
                    .post(ctx.requestHandlers.globals.update(global));
                if (global.versions) {
                    router.route(`/globals/${global.slug}/versions`)
                        .get(ctx.requestHandlers.globals.findVersions(global));
                    router.route(`/globals/${global.slug}/versions/:id`)
                        .get(ctx.requestHandlers.globals.findVersionByID(global))
                        .post(ctx.requestHandlers.globals.restoreVersion(global));
                }
            });
            ctx.router.use(router);
        }
    }
}
exports.default = initGlobals;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nbG9iYWxzL2luaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzREFBOEI7QUFDOUIsd0RBQWdDO0FBQ2hDLGdGQUE0QztBQUM1Qyx3RUFBc0Q7QUFDdEQsOERBQXNDO0FBRXRDLDJFQUF3RTtBQUN4RSxxRUFBeUU7QUFDekUsMEVBQWtEO0FBR2xELFNBQXdCLFdBQVcsQ0FBQyxHQUFZO0lBQzlDLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUU7UUFDdEIsR0FBRyxDQUFDLE9BQU8sR0FBRztZQUNaLEtBQUssRUFBRSxJQUFBLG9CQUFVLEVBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztZQUM3QixNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPO1NBQzNCLENBQUM7UUFFRixHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNwQyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUU7Z0JBQ25CLE1BQU0sZ0JBQWdCLEdBQUcsSUFBQSwyQ0FBb0IsRUFBQyxNQUFNLENBQUMsQ0FBQztnQkFFdEQsTUFBTSxhQUFhLEdBQUcsSUFBQSxxQkFBVyxFQUMvQixHQUFHLENBQUMsTUFBTSxFQUNWLElBQUEsNENBQXdCLEVBQUMsTUFBTSxDQUFDLEVBQ2hDO29CQUNFLGFBQWEsRUFBRSxJQUFJO29CQUNuQixPQUFPLEVBQUU7d0JBQ1AsVUFBVSxFQUFFLElBQUk7cUJBQ2pCO2lCQUNGLENBQ0YsQ0FBQztnQkFFRixhQUFhLENBQUMsTUFBTSxDQUFDLDhCQUFRLEVBQUUsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsQ0FBQztxQkFDeEQsTUFBTSxDQUFDLG9CQUFnQixDQUFDLENBQUM7Z0JBRTVCLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLGtCQUFRLENBQUMsS0FBSyxDQUFDLGdCQUFnQixFQUFFLGFBQWEsQ0FBb0IsQ0FBQzthQUNoRztRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsNEJBQTRCO1FBQzVCLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFO1lBQ2QsTUFBTSxNQUFNLEdBQUcsaUJBQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUVoQyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtnQkFDcEMsTUFBTTtxQkFDSCxLQUFLLENBQUMsWUFBWSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7cUJBQ2hDLEdBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7cUJBQ2hELElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFFcEQsSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFO29CQUNuQixNQUFNLENBQUMsS0FBSyxDQUFDLFlBQVksTUFBTSxDQUFDLElBQUksV0FBVyxDQUFDO3lCQUM3QyxHQUFHLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7b0JBRXpELE1BQU0sQ0FBQyxLQUFLLENBQUMsWUFBWSxNQUFNLENBQUMsSUFBSSxlQUFlLENBQUM7eUJBQ2pELEdBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7eUJBQ3hELElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztpQkFDN0Q7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUVILEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3hCO0tBQ0Y7QUFDSCxDQUFDO0FBcERELDhCQW9EQyJ9