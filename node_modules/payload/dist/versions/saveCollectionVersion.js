"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.saveCollectionVersion = void 0;
const enforceMaxVersions_1 = require("./enforceMaxVersions");
const sanitizeInternalFields_1 = __importDefault(require("../utilities/sanitizeInternalFields"));
const saveCollectionVersion = async ({ payload, config, req, id, docWithLocales, }) => {
    var _a, _b;
    const VersionModel = payload.versions[config.slug];
    let version = docWithLocales;
    if ((_a = config.versions) === null || _a === void 0 ? void 0 : _a.drafts) {
        const latestVersion = await VersionModel.findOne({
            parent: {
                $eq: docWithLocales.id,
            },
            updatedAt: {
                $gt: docWithLocales.updatedAt,
            },
        }, {}, {
            lean: true,
            leanWithId: true,
            sort: {
                updatedAt: 'desc',
            },
        });
        if (latestVersion) {
            // If the latest version is a draft, no need to re-save it
            // Example: when "promoting" a draft to published, the draft already exists.
            // Instead, return null
            if (((_b = latestVersion === null || latestVersion === void 0 ? void 0 : latestVersion.version) === null || _b === void 0 ? void 0 : _b._status) === 'draft') {
                return null;
            }
            version = latestVersion.version;
            version = JSON.parse(JSON.stringify(version));
            version = (0, sanitizeInternalFields_1.default)(version);
        }
    }
    version = await payload.performFieldOperations(config, {
        id,
        depth: 0,
        req,
        data: version,
        hook: 'afterRead',
        operation: 'update',
        overrideAccess: true,
        flattenLocales: false,
        showHiddenFields: true,
    });
    if (version._id)
        delete version._id;
    let createdVersion;
    try {
        createdVersion = await VersionModel.create({
            parent: id,
            version,
            autosave: false,
        });
    }
    catch (err) {
        payload.logger.error(`There was an error while saving a version for the ${config.labels.singular} with ID ${id}.`);
        payload.logger.error(err);
    }
    if (config.versions.maxPerDoc) {
        (0, enforceMaxVersions_1.enforceMaxVersions)({
            id,
            payload: this,
            Model: VersionModel,
            entityLabel: config.labels.plural,
            entityType: 'collection',
            max: config.versions.maxPerDoc,
        });
    }
    if (createdVersion) {
        createdVersion = JSON.parse(JSON.stringify(createdVersion));
        createdVersion = (0, sanitizeInternalFields_1.default)(createdVersion);
    }
    return createdVersion;
};
exports.saveCollectionVersion = saveCollectionVersion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F2ZUNvbGxlY3Rpb25WZXJzaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZlcnNpb25zL3NhdmVDb2xsZWN0aW9uVmVyc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw2REFBMEQ7QUFFMUQsaUdBQXlFO0FBVWxFLE1BQU0scUJBQXFCLEdBQUcsS0FBSyxFQUFFLEVBQzFDLE9BQU8sRUFDUCxNQUFNLEVBQ04sR0FBRyxFQUNILEVBQUUsRUFDRixjQUFjLEdBQ1QsRUFBaUIsRUFBRTs7SUFDeEIsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFbkQsSUFBSSxPQUFPLEdBQUcsY0FBYyxDQUFDO0lBRTdCLElBQUksTUFBQSxNQUFNLENBQUMsUUFBUSwwQ0FBRSxNQUFNLEVBQUU7UUFDM0IsTUFBTSxhQUFhLEdBQUcsTUFBTSxZQUFZLENBQUMsT0FBTyxDQUFDO1lBQy9DLE1BQU0sRUFBRTtnQkFDTixHQUFHLEVBQUUsY0FBYyxDQUFDLEVBQUU7YUFDdkI7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsR0FBRyxFQUFFLGNBQWMsQ0FBQyxTQUFTO2FBQzlCO1NBQ0YsRUFDRCxFQUFFLEVBQ0Y7WUFDRSxJQUFJLEVBQUUsSUFBSTtZQUNWLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLElBQUksRUFBRTtnQkFDSixTQUFTLEVBQUUsTUFBTTthQUNsQjtTQUNGLENBQUMsQ0FBQztRQUVILElBQUksYUFBYSxFQUFFO1lBQ2pCLDBEQUEwRDtZQUMxRCw0RUFBNEU7WUFDNUUsdUJBQXVCO1lBQ3ZCLElBQUksQ0FBQSxNQUFBLGFBQWEsYUFBYixhQUFhLHVCQUFiLGFBQWEsQ0FBRSxPQUFPLDBDQUFFLE9BQU8sTUFBSyxPQUFPLEVBQUU7Z0JBQy9DLE9BQU8sSUFBSSxDQUFDO2FBQ2I7WUFFRCxPQUFPLEdBQUcsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNoQyxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDOUMsT0FBTyxHQUFHLElBQUEsZ0NBQXNCLEVBQUMsT0FBTyxDQUFDLENBQUM7U0FDM0M7S0FDRjtJQUVELE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLEVBQUU7UUFDckQsRUFBRTtRQUNGLEtBQUssRUFBRSxDQUFDO1FBQ1IsR0FBRztRQUNILElBQUksRUFBRSxPQUFPO1FBQ2IsSUFBSSxFQUFFLFdBQVc7UUFDakIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsY0FBYyxFQUFFLElBQUk7UUFDcEIsY0FBYyxFQUFFLEtBQUs7UUFDckIsZ0JBQWdCLEVBQUUsSUFBSTtLQUN2QixDQUFDLENBQUM7SUFFSCxJQUFJLE9BQU8sQ0FBQyxHQUFHO1FBQUUsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBRXBDLElBQUksY0FBYyxDQUFDO0lBRW5CLElBQUk7UUFDRixjQUFjLEdBQUcsTUFBTSxZQUFZLENBQUMsTUFBTSxDQUFDO1lBQ3pDLE1BQU0sRUFBRSxFQUFFO1lBQ1YsT0FBTztZQUNQLFFBQVEsRUFBRSxLQUFLO1NBQ2hCLENBQUMsQ0FBQztLQUNKO0lBQUMsT0FBTyxHQUFHLEVBQUU7UUFDWixPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxxREFBcUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLFlBQVksRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNuSCxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUMzQjtJQUVELElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUU7UUFDN0IsSUFBQSx1Q0FBa0IsRUFBQztZQUNqQixFQUFFO1lBQ0YsT0FBTyxFQUFFLElBQUk7WUFDYixLQUFLLEVBQUUsWUFBWTtZQUNuQixXQUFXLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNO1lBQ2pDLFVBQVUsRUFBRSxZQUFZO1lBQ3hCLEdBQUcsRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVM7U0FDL0IsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxJQUFJLGNBQWMsRUFBRTtRQUNsQixjQUFjLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDNUQsY0FBYyxHQUFHLElBQUEsZ0NBQXNCLEVBQUMsY0FBYyxDQUFDLENBQUM7S0FDekQ7SUFFRCxPQUFPLGNBQWMsQ0FBQztBQUN4QixDQUFDLENBQUM7QUF2RlcsUUFBQSxxQkFBcUIseUJBdUZoQyJ9