"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensurePublishedGlobalVersion = void 0;
const enforceMaxVersions_1 = require("./enforceMaxVersions");
const ensurePublishedGlobalVersion = async ({ payload, config, req, docWithLocales, }) => {
    // If there are no newer drafts,
    // And the current doc is published,
    // We need to keep a version of the published document
    if ((docWithLocales === null || docWithLocales === void 0 ? void 0 : docWithLocales._status) === 'published') {
        const VersionModel = payload.versions[config.slug];
        const moreRecentDrafts = await VersionModel.find({
            updatedAt: {
                $gt: docWithLocales.updatedAt,
            },
        }, {}, {
            lean: true,
            leanWithId: true,
            sort: {
                updatedAt: 'desc',
            },
        });
        if ((moreRecentDrafts === null || moreRecentDrafts === void 0 ? void 0 : moreRecentDrafts.length) === 0) {
            const version = await payload.performFieldOperations(config, {
                depth: 0,
                req,
                data: docWithLocales,
                hook: 'afterRead',
                operation: 'update',
                overrideAccess: true,
                flattenLocales: false,
                showHiddenFields: true,
            });
            try {
                await VersionModel.create({
                    version,
                    autosave: false,
                });
            }
            catch (err) {
                payload.logger.error(`There was an error while saving a version for the Global ${config.label}.`);
                payload.logger.error(err);
            }
            if (config.versions.max) {
                (0, enforceMaxVersions_1.enforceMaxVersions)({
                    payload: this,
                    Model: VersionModel,
                    entityLabel: config.label,
                    entityType: 'global',
                    max: config.versions.max,
                });
            }
        }
    }
};
exports.ensurePublishedGlobalVersion = ensurePublishedGlobalVersion;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5zdXJlUHVibGlzaGVkR2xvYmFsVmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92ZXJzaW9ucy9lbnN1cmVQdWJsaXNoZWRHbG9iYWxWZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDZEQUEwRDtBQVduRCxNQUFNLDRCQUE0QixHQUFHLEtBQUssRUFBRSxFQUNqRCxPQUFPLEVBQ1AsTUFBTSxFQUNOLEdBQUcsRUFDSCxjQUFjLEdBQ1QsRUFBaUIsRUFBRTtJQUN4QixnQ0FBZ0M7SUFDaEMsb0NBQW9DO0lBQ3BDLHNEQUFzRDtJQUV0RCxJQUFJLENBQUEsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLE9BQU8sTUFBSyxXQUFXLEVBQUU7UUFDM0MsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkQsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLFlBQVksQ0FBQyxJQUFJLENBQUM7WUFDL0MsU0FBUyxFQUFFO2dCQUNULEdBQUcsRUFBRSxjQUFjLENBQUMsU0FBUzthQUM5QjtTQUNGLEVBQ0QsRUFBRSxFQUNGO1lBQ0UsSUFBSSxFQUFFLElBQUk7WUFDVixVQUFVLEVBQUUsSUFBSTtZQUNoQixJQUFJLEVBQUU7Z0JBQ0osU0FBUyxFQUFFLE1BQU07YUFDbEI7U0FDRixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUEsZ0JBQWdCLGFBQWhCLGdCQUFnQix1QkFBaEIsZ0JBQWdCLENBQUUsTUFBTSxNQUFLLENBQUMsRUFBRTtZQUNsQyxNQUFNLE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxNQUFNLEVBQUU7Z0JBQzNELEtBQUssRUFBRSxDQUFDO2dCQUNSLEdBQUc7Z0JBQ0gsSUFBSSxFQUFFLGNBQWM7Z0JBQ3BCLElBQUksRUFBRSxXQUFXO2dCQUNqQixTQUFTLEVBQUUsUUFBUTtnQkFDbkIsY0FBYyxFQUFFLElBQUk7Z0JBQ3BCLGNBQWMsRUFBRSxLQUFLO2dCQUNyQixnQkFBZ0IsRUFBRSxJQUFJO2FBQ3ZCLENBQUMsQ0FBQztZQUVILElBQUk7Z0JBQ0YsTUFBTSxZQUFZLENBQUMsTUFBTSxDQUFDO29CQUN4QixPQUFPO29CQUNQLFFBQVEsRUFBRSxLQUFLO2lCQUNoQixDQUFDLENBQUM7YUFDSjtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNaLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLDREQUE0RCxNQUFNLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztnQkFDbEcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDM0I7WUFFRCxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFO2dCQUN2QixJQUFBLHVDQUFrQixFQUFDO29CQUNqQixPQUFPLEVBQUUsSUFBSTtvQkFDYixLQUFLLEVBQUUsWUFBWTtvQkFDbkIsV0FBVyxFQUFFLE1BQU0sQ0FBQyxLQUFLO29CQUN6QixVQUFVLEVBQUUsUUFBUTtvQkFDcEIsR0FBRyxFQUFFLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRztpQkFDekIsQ0FBQyxDQUFDO2FBQ0o7U0FDRjtLQUNGO0FBQ0gsQ0FBQyxDQUFDO0FBNURXLFFBQUEsNEJBQTRCLGdDQTREdkMifQ==